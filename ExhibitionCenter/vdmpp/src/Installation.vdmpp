class Installation
instance variables
-- Measures
	public id: Utils`String := "untitled";
	public price: real := 0;
	public capacity: nat := 0;
	public area: real := 0;
	public heigth: real := 0;
	public width: real := 0;
	public lenght: real := 0;
	inv area = width * lenght;
-- Conditions
	public airCondition: bool := false;
	public naturalLigth: bool := false;
	public ceilingLighting: bool := false;
	public blackOutCurtains: bool := false;
	public telephones: bool := false;
	public computerNetwork: bool := false;
	public soundproofWalls: bool := false;
	public movingWalls: bool := false;
operations
-- Return installation id
	public getID: () ==> Utils`String
		getID() == return id;
		
	public addFoyer : Foyer ==> ()
		addFoyer(f) == is subclass responsibility;
	public removeFoyer : Foyer ==> ()
		removeFoyer(f) == is subclass responsibility;
	public addRoom : Room ==> ()
		addRoom(r) == is subclass responsibility;
	public removeRoom : Room ==> ()
		removeRoom(r) == is subclass responsibility;
	public hasInstallation: Installation ==> bool
		hasInstallation(inst) == is subclass responsibility;
	public setConditions: bool * bool * bool * bool * bool * bool * bool * bool ==> ()
		setConditions(airC, natL, ceilL, blackC, tele, compN, soundW, movW) == 
			is subclass responsibility;
	public showDetails: () ==> map Utils`String to Utils`String
		showDetails() == is subclass responsibility;
--Change Installation price per day	
	public setPrice: real ==> ()
		setPrice(pr) == price := pr
		pre pr > 0
		post price = pr;
	--Change installation measures
	public setMeasures: nat * real * real * real ==> ()
			setMeasures(c, h, w, l) == (
				atomic(
					capacity := c;
					heigth := h;
					width := w;
					lenght := l;
					area := w * l;
				)
			)
			pre c > 0 and h > 0 and w > 0 and l > 0
			post capacity = c and heigth = h and width = w and lenght = l;
end Installation
